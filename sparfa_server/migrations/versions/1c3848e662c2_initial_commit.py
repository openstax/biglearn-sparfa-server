"""initial commit

Revision ID: 1c3848e662c2
Revises: 
Create Date: 2018-11-12 17:30:21.839017

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1c3848e662c2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('metadata_sequence_number', sa.INTEGER(), nullable=False),
    sa.Column('sequence_number', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_courses_metadata_sequence_number'), 'courses', ['metadata_sequence_number'], unique=True)
    op.create_table('ecosystem_matrices',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('Q_ids', postgresql.ARRAY(postgresql.UUID()), nullable=False),
    sa.Column('C_ids', postgresql.ARRAY(postgresql.UUID()), nullable=False),
    sa.Column('d_data', postgresql.ARRAY(sa.FLOAT()), nullable=False),
    sa.Column('w_data', postgresql.ARRAY(sa.FLOAT()), nullable=False),
    sa.Column('w_row', postgresql.ARRAY(sa.INTEGER()), nullable=False),
    sa.Column('w_col', postgresql.ARRAY(sa.INTEGER()), nullable=False),
    sa.Column('h_mask_data', postgresql.ARRAY(sa.BOOLEAN()), nullable=False),
    sa.Column('h_mask_row', postgresql.ARRAY(sa.INTEGER()), nullable=False),
    sa.Column('h_mask_col', postgresql.ARRAY(sa.INTEGER()), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('ecosystems',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('metadata_sequence_number', sa.INTEGER(), nullable=False),
    sa.Column('sequence_number', sa.INTEGER(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_ecosystems_metadata_sequence_number'), 'ecosystems', ['metadata_sequence_number'], unique=True)
    op.create_table('pages',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('ecosystem_uuid', postgresql.UUID(), nullable=False),
    sa.Column('exercise_uuids', postgresql.ARRAY(postgresql.UUID()), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_pages_ecosystem_uuid'), 'pages', ['ecosystem_uuid'], unique=False)
    op.create_table('responses',
    sa.Column('uuid', postgresql.UUID(), nullable=False),
    sa.Column('course_uuid', postgresql.UUID(), nullable=False),
    sa.Column('ecosystem_uuid', postgresql.UUID(), nullable=False),
    sa.Column('trial_uuid', postgresql.UUID(), nullable=False),
    sa.Column('student_uuid', postgresql.UUID(), nullable=False),
    sa.Column('exercise_uuid', postgresql.UUID(), nullable=False),
    sa.Column('is_correct', sa.BOOLEAN(), nullable=False),
    sa.Column('is_real_response', sa.BOOLEAN(), nullable=False),
    sa.Column('responded_at', postgresql.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_responses_course_uuid'), 'responses', ['course_uuid'], unique=False)
    op.create_index(op.f('ix_responses_ecosystem_uuid'), 'responses', ['ecosystem_uuid'], unique=False)
    op.create_index(op.f('ix_responses_exercise_uuid'), 'responses', ['exercise_uuid'], unique=False)
    op.create_index(op.f('ix_responses_student_uuid'), 'responses', ['student_uuid'], unique=False)
    op.create_index(op.f('ix_responses_trial_uuid'), 'responses', ['trial_uuid'], unique=True)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_responses_trial_uuid'), table_name='responses')
    op.drop_index(op.f('ix_responses_student_uuid'), table_name='responses')
    op.drop_index(op.f('ix_responses_exercise_uuid'), table_name='responses')
    op.drop_index(op.f('ix_responses_ecosystem_uuid'), table_name='responses')
    op.drop_index(op.f('ix_responses_course_uuid'), table_name='responses')
    op.drop_table('responses')
    op.drop_index(op.f('ix_pages_ecosystem_uuid'), table_name='pages')
    op.drop_table('pages')
    op.drop_index(op.f('ix_ecosystems_metadata_sequence_number'), table_name='ecosystems')
    op.drop_table('ecosystems')
    op.drop_table('ecosystem_matrices')
    op.drop_index(op.f('ix_courses_metadata_sequence_number'), table_name='courses')
    op.drop_table('courses')
    # ### end Alembic commands ###
